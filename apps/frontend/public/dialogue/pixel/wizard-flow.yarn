title: Start
---
Pixel: Hey there! Welcome to Pixel's PyGame Palace! I'm Pixel, your game-making buddy! ðŸŽ®
Pixel: Before we dive in, I want to make sure I'm not telling you anything you already know...
-> You want me to throw together a basic framework for your game so you can get started right away?
    <<jump GamePath>>
-> Would you like to take the opportunity to learn some Python together first?
    <<jump LearnPath>>
===

title: GamePath
---
Pixel: Great, we've got ourselves a game cooking here! But it needs a direction. What are you thinking? I can do a few!
-> RPG - Epic quests and adventures!
    <<set $gameType to "rpg">>
    <<jump WorkStyle>>
-> Platformer - Jump and run fun!
    <<set $gameType to "platformer">>
    <<jump WorkStyle>>
-> Dungeon Crawler - Explore dark depths!
    <<set $gameType to "dungeon">>
    <<jump WorkStyle>>
-> Racing - Speed and thrills!
    <<set $gameType to "racing">>
    <<jump WorkStyle>>
-> Puzzle - Brain-teasing challenges!
    <<set $gameType to "puzzle">>
    <<jump WorkStyle>>
-> Adventure - Story-driven exploration!
    <<set $gameType to "adventure">>
    <<jump WorkStyle>>
===

title: WorkStyle
---
Pixel: Awesome! Love it! Hey I'm just here to help, how do you like to work?
-> Full editor - I got this!
    <<openEditor>>
-> Walk me through it!
    <<jump WizardMode>>
===

title: WizardMode
---
<<if $gameType == "platformer">>
    Pixel: Alright, great! What do you think for a title screen? Got these great assets that work perfect in a platformer!
    <<showAssets type="platformer" scene="title">>
<<elseif $gameType == "rpg">>
    Pixel: Awesome! Okay hey, in an RPG you know what you need? A character selection screen! Let's design that first!
    <<showAssets type="rpg" scene="character">>
<<elseif $gameType == "dungeon">>
    Pixel: Perfect choice! Dungeon crawlers need that spooky atmosphere. Let's start with your dungeon entrance!
    <<showAssets type="dungeon" scene="entrance">>
<<elseif $gameType == "racing">>
    Pixel: Speed demon! I like it! Every racing game needs a cool car selection screen. Let's build that first!
    <<showAssets type="racing" scene="garage">>
<<elseif $gameType == "puzzle">>
    Pixel: Brain teasers! Nice! Let's design your main menu where players can choose levels!
    <<showAssets type="puzzle" scene="menu">>
<<elseif $gameType == "adventure">>
    Pixel: Adventure awaits! These games are all about the story. Let's create your opening scene!
    <<showAssets type="adventure" scene="opening">>
<<else>>
    Pixel: Interesting choice! Let's start with the basics - your main menu!
    <<showAssets type="generic" scene="menu">>
<<endif>>
===

title: LearnPath
---
Pixel: Perfect! Learning Python is the best way to really understand game development. Let me show you our lessons!
<<openLessons>>
===

title: AssetSelected
---
Pixel: Great choice! Now let's add some interactivity. What should happen when the player starts?
-> Add player controls
    <<jump PlayerControls>>
-> Set up the game world
    <<jump WorldSetup>>
-> Configure game rules
    <<jump GameRules>>
===

title: PlayerControls
---
<<if $gameType == "platformer">>
    Pixel: In platformers, movement is everything! Let's set up jumping and running mechanics!
    <<setupControls type="platformer">>
<<elseif $gameType == "rpg">>
    Pixel: RPG controls are about exploration and interaction. Let's configure your character movement!
    <<setupControls type="rpg">>
<<elseif $gameType == "racing">>
    Pixel: Racing is all about speed and precision! Let's tune your vehicle controls!
    <<setupControls type="racing">>
<<else>>
    Pixel: Let's get your controls set up so you can interact with the game!
    <<setupControls type="default">>
<<endif>>
===

title: WorldSetup
---
Pixel: Time to build your game world! This is where the magic happens!
<<if $gameType == "platformer">>
    Pixel: Platformers need great level design with platforms, obstacles, and collectibles!
<<elseif $gameType == "rpg">>
    Pixel: RPG worlds are vast and full of stories. Let's create your first area!
<<endif>>
<<buildWorld type=$gameType>>
===

title: GameRules
---
Pixel: Every game needs rules! Let's define how players win, lose, and progress!
-> Simple rules - Just the basics
    <<setRules complexity="simple">>
-> Complex rules - Full game mechanics
    <<setRules complexity="complex">>
===

title: ProjectComplete
---
Pixel: Awesome work! Your game framework is ready! ðŸŽ‰
Pixel: You can now start adding your own features and making it unique!
-> Open in editor to continue
    <<openEditor>>
-> Start over with a different game
    <<jump Start>>
-> Learn more Python first
    <<openLessons>>
===

title: Error
---
Pixel: Oops! Something went wrong. Don't worry, we can fix this!
-> Try again
    <<jump Start>>
-> Get help
    <<openHelp>>
===