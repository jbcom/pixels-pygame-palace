{
  "nodes": {
    "start": {
      "id": "start",
      "speaker": "Pixel",
      "text": "Welcome to your first Python adventure! üéÆ I'm super excited to teach you programming!",
      "followUp": "You know what's cool? Every game you've ever played started with someone typing their first line of code, just like you're about to do!",
      "options": [
        {
          "text": "Let's do this! I'm pumped!",
          "next": "firstPrint"
        },
        {
          "text": "Uhh... is this gonna be really hard?",
          "next": "reassurance"
        }
      ]
    },
    "reassurance": {
      "id": "reassurance",
      "speaker": "Pixel",
      "text": "Not at all! Think of it like learning the controls in a new game - seems tricky at first, but soon it becomes second nature!",
      "followUp": "We'll start super simple. Want to make Python say hello?",
      "options": [
        {
          "text": "Yeah! Let's make it talk!",
          "next": "firstPrint"
        }
      ]
    },
    "firstPrint": {
      "id": "firstPrint",
      "speaker": "Pixel",
      "text": "Okay, so here's your first superpower - the print() function! It's basically like giving Python a voice!",
      "codeExample": "print('Hello, World!')",
      "followUp": "See those quotes? That's how Python knows what to say. Which one looks right to you?",
      "options": [
        {
          "text": "The one with quotes looks right!",
          "next": "printSuccess"
        },
        {
          "text": "Maybe without the quotes?",
          "next": "printError"
        }
      ]
    },
    "printError": {
      "id": "printError",
      "speaker": "Pixel",
      "text": "Ooh, so close! But Python's a bit picky - it needs those quotes, like putting quotation marks around someone's speech!",
      "codeExample": "print('Hello, World!')  # The quotes are important!",
      "followUp": "Without quotes, Python gets confused and thinks you're talking about something that doesn't exist yet!",
      "options": [
        {
          "text": "Ah, got it! With quotes then!",
          "next": "printSuccess"
        },
        {
          "text": "Wait, why the quotes though?",
          "next": "explainQuotes"
        }
      ]
    },
    "explainQuotes": {
      "id": "explainQuotes",
      "speaker": "Pixel",
      "text": "Great question! So here's the thing - without quotes, Python thinks Hello is like... a secret code word it should know!",
      "codeExample": "print(Hello)  # Python: 'What's Hello? I don't know that!'\nprint('Hello')  # Python: 'Oh! You want me to SAY Hello!'",
      "followUp": "It's like the difference between saying 'Mario' versus 'Say the word Mario' - totally different!",
      "options": [
        {
          "text": "Ohhh that totally makes sense now!",
          "next": "firstPrint"
        }
      ]
    },
    "printSuccess": {
      "id": "printSuccess",
      "speaker": "Pixel",
      "text": "üéâ YES! Look at you! You just wrote actual code! You're officially a programmer now!",
      "followUp": "You can make Python say literally anything - jokes, game messages, whatever! What should we print next?",
      "options": [
        {
          "text": "Something about games!",
          "next": "morePrints"
        },
        {
          "text": "I want to print my name!",
          "next": "morePrints"
        }
      ]
    },
    "morePrints": {
      "id": "morePrints",
      "speaker": "Pixel",
      "text": "Nice! You're a natural! Okay, here's where it gets really cool - we can save stuff to use later!",
      "followUp": "Imagine having treasure chests in your code where you can store things... that's basically what variables are!",
      "options": [
        {
          "text": "Ooh, like inventory slots?",
          "next": "variables"
        },
        {
          "text": "Can I call them whatever I want?",
          "next": "variableNames"
        }
      ]
    },
    "variableNames": {
      "id": "variableNames",
      "speaker": "Pixel",
      "text": "Pretty much! It's like creating usernames - you've got freedom but there are a few rules!",
      "codeExample": "player_name = 'Pixel'  # Perfect!\nhero123 = 'Link'       # Totally works!\n123hero = 'Mario'      # Nope - numbers can't go first!",
      "followUp": "Just remember: no spaces (use underscores), and numbers can't be first. Easy!",
      "options": [
        {
          "text": "Makes sense! Let's make some variables!",
          "next": "variables"
        }
      ]
    },
    "variables": {
      "id": "variables",
      "speaker": "Pixel",
      "text": "Alright, time to create your first variable! Just pick a name, add an equals sign, and boom - storage!",
      "codeExample": "player_name = 'Pixel'\nprint(player_name)",
      "followUp": "See that? We just stuffed 'Pixel' into a box called player_name! Now we can use it anywhere!",
      "options": [
        {
          "text": "I want to store a number!",
          "next": "numberVariable"
        },
        {
          "text": "Let me save some text!",
          "next": "stringVariable"
        }
      ]
    },
    "numberVariable": {
      "id": "numberVariable",
      "speaker": "Pixel",
      "text": "Boom! You just stored a number! And look - no quotes needed this time!",
      "codeExample": "score = 100\nlives = 3\nprint('Score:', score)\nprint('Lives:', lives)",
      "followUp": "Python's smart enough to know 100 is a number. No quotes = it's math time!",
      "options": [
        {
          "text": "Wait, can I add them together?",
          "next": "mathPreview"
        },
        {
          "text": "What other stuff can variables hold?",
          "next": "dataTypes"
        }
      ]
    },
    "stringVariable": {
      "id": "stringVariable",
      "speaker": "Pixel",
      "text": "Nice! You just made a 'string' variable - fancy programmer word for text!",
      "codeExample": "game_title = 'My Awesome Game'\nprint('Now playing:', game_title)",
      "followUp": "Strings are perfect for all the words in your game - character names, dialogue, everything!",
      "options": [
        {
          "text": "Can I stick strings together?",
          "next": "stringCombine"
        },
        {
          "text": "How do numbers work?",
          "next": "numberVariable"
        }
      ]
    },
    "stringCombine": {
      "id": "stringCombine",
      "speaker": "Pixel",
      "text": "Oh yeah! Watch this - strings can stick together like LEGO blocks!",
      "codeExample": "first = 'Super'\nlast = 'Mario'\nfull_name = first + ' ' + last\nprint(full_name)  # Ta-da! Super Mario!",
      "followUp": "The plus sign is like glue for words! Perfect for building game messages on the fly!",
      "options": [
        {
          "text": "That's awesome! What else can Python do?",
          "next": "dataTypes"
        }
      ]
    },
    "mathPreview": {
      "id": "mathPreview",
      "speaker": "Pixel",
      "text": "Oh absolutely! Python's basically a calculator on steroids! Watch this!",
      "codeExample": "score = 100\nbonus = 50\ntotal = score + bonus\nprint('Total score:', total)  # Boom! 150!",
      "followUp": "Next lesson we'll go crazy with math - for now, just know it works!",
      "options": [
        {
          "text": "Math in games? I'm interested!",
          "next": "dataTypes"
        }
      ]
    },
    "dataTypes": {
      "id": "dataTypes",
      "speaker": "Pixel",
      "text": "Python's got different types of data - think of them like different items in your inventory!",
      "codeExample": "# Strings (text)\nplayer = 'Hero'\n\n# Integers (whole numbers)  \nlevel = 5\n\n# Floats (decimals)\nhealth = 95.5\n\n# Booleans (true/false)\ngame_over = False",
      "followUp": "Each type does different things - we'll use them all to make amazing games!",
      "options": [
        {
          "text": "I think I'm getting it!",
          "next": "practice"
        },
        {
          "text": "Can I see this in action?",
          "next": "moreExamples"
        }
      ]
    },
    "moreExamples": {
      "id": "moreExamples",
      "speaker": "Pixel",
      "text": "Check this out - variables working together like an RPG character sheet!",
      "codeExample": "# Game character stats\ncharacter_name = 'Shadow Knight'\nhealth = 100\nmana = 50\nlevel = 1\nis_alive = True\n\n# Display the stats\nprint('Character:', character_name)\nprint('HP:', health, '/ MP:', mana)\nprint('Level:', level)",
      "followUp": "See? Variables are basically how games remember everything - scores, lives, player names!",
      "options": [
        {
          "text": "This is so cool! Let me try!",
          "next": "practice"
        }
      ]
    },
    "practice": {
      "id": "practice",
      "speaker": "Pixel",
      "text": "Time for a mini challenge! Can you create a simple game intro using what you've learned?",
      "followUp": "Create variables for a game title and player name, then print a welcome message!",
      "options": [
        {
          "text": "game = 'Dragon Quest' and name = 'Hero'",
          "next": "practiceCheck"
        },
        {
          "text": "I need a hint!",
          "next": "practiceHint"
        }
      ]
    },
    "practiceHint": {
      "id": "practiceHint",
      "speaker": "Pixel",
      "text": "No problem! Here's a template to help you out!",
      "codeExample": "game_title = '???'  # Put your game name here\nplayer_name = '???'  # Put your player name here\nprint('Welcome to', game_title)\nprint('Good luck,', player_name)",
      "followUp": "Just replace the ??? with your own text!",
      "options": [
        {
          "text": "Got it! Let me try now",
          "next": "practiceCheck"
        }
      ]
    },
    "practiceCheck": {
      "id": "practiceCheck",
      "speaker": "Pixel",
      "text": "Fantastic work! You've mastered the basics of Python! üèÜ",
      "codeExample": "game_title = 'Dragon Quest'\nplayer_name = 'Hero'\nprint('Welcome to', game_title)\nprint('Good luck,', player_name)",
      "followUp": "You learned print(), variables, and different data types - that's the foundation of all programming!",
      "options": [
        {
          "text": "What's next?",
          "next": "lessonComplete"
        }
      ]
    },
    "lessonComplete": {
      "id": "lessonComplete",
      "speaker": "Pixel",
      "text": "üéä LEVEL 1 COMPLETE! You're officially a Python programmer now!",
      "followUp": "You've unlocked the power to make computers do your bidding! Ready to level up?",
      "action": "completeLesson",
      "actionParams": { "lesson": 1, "nextLesson": 2 },
      "options": [
        {
          "text": "Take me to Lesson 2 - Math & Operations!",
          "action": "loadLesson",
          "actionParams": { "lesson": 2 }
        },
        {
          "text": "I want to start making a game now!",
          "action": "startGameMode"
        },
        {
          "text": "Let me practice more first",
          "next": "extraPractice"
        }
      ]
    },
    "extraPractice": {
      "id": "extraPractice",
      "speaker": "Pixel",
      "text": "Great idea! Practice makes perfect! Try these exercises:",
      "codeExample": "# Exercise 1: Create a character\n# Make variables for: name, class, level, health\n\n# Exercise 2: Print a story\n# Use variables to print a short game intro\n\n# Exercise 3: Mix it up\n# Try storing different types of data",
      "followUp": "Take your time experimenting! When you're ready, move on to the next lesson!",
      "options": [
        {
          "text": "I'm ready for Lesson 2!",
          "action": "loadLesson",
          "actionParams": { "lesson": 2 }
        },
        {
          "text": "Back to lesson menu",
          "action": "openLessons"
        }
      ]
    }
  },
  "startNode": "start"
}