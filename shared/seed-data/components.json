[
  {
    "id": "player-sprite",
    "type": "player",
    "name": "Player Sprite",
    "description": "A controllable player character with animation frames, collision detection, and customizable properties. Supports multiple animation states including idle, walking, jumping, and actions.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object",
      "properties": {
        "speed": {
          "type": "number",
          "default": 200,
          "minimum": 50,
          "maximum": 500,
          "description": "Movement speed in pixels per second"
        },
        "jumpHeight": {
          "type": "number", 
          "default": 300,
          "minimum": 100,
          "maximum": 600,
          "description": "Jump height in pixels"
        },
        "health": {
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "maximum": 10,
          "description": "Player health points"
        },
        "invulnerabilityTime": {
          "type": "number",
          "default": 1.5,
          "minimum": 0.5,
          "maximum": 5.0,
          "description": "Invulnerability time after taking damage"
        },
        "animationSpeed": {
          "type": "number",
          "default": 0.1,
          "minimum": 0.05,
          "maximum": 0.5,
          "description": "Animation frame duration in seconds"
        }
      },
      "required": ["speed", "jumpHeight", "health"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "idle-sprite",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["character", "idle", "animation"],
        "defaultAsset": "player-blue-idle"
      },
      {
        "slotId": "walk-sprite",
        "assetType": "sprite", 
        "required": true,
        "multiple": false,
        "tags": ["character", "walk", "animation"],
        "defaultAsset": "player-blue-walk"
      },
      {
        "slotId": "jump-sprite",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["character", "jump", "animation"],
        "defaultAsset": "player-blue-jump"
      },
      {
        "slotId": "damage-sound",
        "assetType": "sound",
        "required": false,
        "multiple": false,
        "tags": ["damage", "player", "feedback"],
        "defaultAsset": "player-damage-sound"
      }
    ],
    "events": [
      {
        "name": "player_moved",
        "description": "Fired when the player moves to a new position",
        "parameters": {
          "oldPosition": { "type": "object" },
          "newPosition": { "type": "object" },
          "velocity": { "type": "object" }
        }
      },
      {
        "name": "player_jumped",
        "description": "Fired when the player initiates a jump",
        "parameters": {
          "position": { "type": "object" },
          "jumpVelocity": { "type": "number" }
        }
      },
      {
        "name": "player_damaged",
        "description": "Fired when the player takes damage",
        "parameters": {
          "damage": { "type": "number" },
          "newHealth": { "type": "number" },
          "source": { "type": "string" }
        }
      },
      {
        "name": "player_died",
        "description": "Fired when the player's health reaches zero",
        "parameters": {
          "position": { "type": "object" },
          "cause": { "type": "string" }
        }
      }
    ],
    "category": "core",
    "tags": ["player", "character", "controllable", "animated", "collision"],
    "icon": "user",
    "preview": "player-sprite-preview.gif",
    "documentation": {
      "usage": "The Player Sprite component creates a controllable character that responds to input. Configure movement speed, jump height, and health to match your game's feel. Assign sprite assets for different animation states.",
      "examples": [
        {
          "title": "Basic Platformer Player",
          "description": "Standard setup for a 2D platformer",
          "config": {
            "speed": 200,
            "jumpHeight": 300,
            "health": 3,
            "animationSpeed": 0.1
          }
        },
        {
          "title": "Fast-Paced Action Player", 
          "description": "High-speed setup for action games",
          "config": {
            "speed": 400,
            "jumpHeight": 250,
            "health": 5,
            "animationSpeed": 0.08
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "platform-ground",
    "type": "platform",
    "name": "Platform/Ground",
    "description": "Solid platform component that provides collision surfaces for characters to stand on, jump from, or interact with. Supports different platform types and behaviors.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object",
      "properties": {
        "width": {
          "type": "number",
          "default": 128,
          "minimum": 32,
          "maximum": 1024,
          "description": "Platform width in pixels"
        },
        "height": {
          "type": "number",
          "default": 32,
          "minimum": 16,
          "maximum": 256,
          "description": "Platform height in pixels"
        },
        "solid": {
          "type": "boolean",
          "default": true,
          "description": "Whether the platform blocks all movement"
        },
        "oneWayUp": {
          "type": "boolean",
          "default": false,
          "description": "Allow passing through from below"
        },
        "breakable": {
          "type": "boolean",
          "default": false,
          "description": "Can be destroyed by player or enemies"
        },
        "moving": {
          "type": "boolean",
          "default": false,
          "description": "Platform moves according to a pattern"
        },
        "movementSpeed": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "Movement speed if platform is moving"
        }
      },
      "required": ["width", "height"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "platform-sprite",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["platform", "ground", "tile"],
        "defaultAsset": "grass-platform"
      },
      {
        "slotId": "break-sound",
        "assetType": "sound",
        "required": false,
        "multiple": false,
        "tags": ["break", "destruction", "platform"],
        "defaultAsset": "platform-break-sound"
      }
    ],
    "events": [
      {
        "name": "platform_landed",
        "description": "Fired when an entity lands on the platform",
        "parameters": {
          "entity": { "type": "string" },
          "landingForce": { "type": "number" }
        }
      },
      {
        "name": "platform_broken",
        "description": "Fired when a breakable platform is destroyed",
        "parameters": {
          "position": { "type": "object" },
          "destroyer": { "type": "string" }
        }
      }
    ],
    "category": "core",
    "tags": ["platform", "ground", "collision", "solid", "environment"],
    "icon": "square",
    "preview": "platform-preview.png",
    "documentation": {
      "usage": "Platform components provide solid surfaces for gameplay. Configure size, collision behavior, and movement patterns. Essential for platformer games.",
      "examples": [
        {
          "title": "Standard Ground Platform",
          "description": "Basic solid platform for level geometry",
          "config": {
            "width": 128,
            "height": 32,
            "solid": true,
            "oneWayUp": false
          }
        },
        {
          "title": "Jump-Through Platform",
          "description": "Platform you can jump through from below",
          "config": {
            "width": 96,
            "height": 24,
            "solid": true,
            "oneWayUp": true
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "scrolling-background",
    "type": "background",
    "name": "Scrolling Background",
    "description": "Animated background component that creates depth and atmosphere with parallax scrolling, tiling, and multiple layer support for rich visual environments.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object",
      "properties": {
        "scrollSpeed": {
          "type": "number",
          "default": 0.5,
          "minimum": 0,
          "maximum": 2.0,
          "description": "Background scroll speed multiplier"
        },
        "parallaxFactor": {
          "type": "number",
          "default": 0.3,
          "minimum": 0,
          "maximum": 1.0,
          "description": "Parallax effect strength (0=static, 1=same as camera)"
        },
        "tileHorizontally": {
          "type": "boolean",
          "default": true,
          "description": "Repeat background horizontally"
        },
        "tileVertically": {
          "type": "boolean",
          "default": false,
          "description": "Repeat background vertically"
        },
        "opacity": {
          "type": "number",
          "default": 1.0,
          "minimum": 0,
          "maximum": 1.0,
          "description": "Background opacity (0=invisible, 1=opaque)"
        }
      },
      "required": ["scrollSpeed"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "background-image",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["background", "landscape", "environment"],
        "defaultAsset": "hills-background"
      },
      {
        "slotId": "far-background",
        "assetType": "sprite",
        "required": false,
        "multiple": false,
        "tags": ["background", "far", "sky"],
        "defaultAsset": "sky-background"
      },
      {
        "slotId": "foreground-elements",
        "assetType": "sprite",
        "required": false,
        "multiple": true,
        "tags": ["foreground", "detail", "decoration"],
        "defaultAsset": "tree-silhouettes"
      }
    ],
    "events": [
      {
        "name": "background_scrolled",
        "description": "Fired when background position updates",
        "parameters": {
          "scrollOffset": { "type": "object" },
          "scrollSpeed": { "type": "number" }
        }
      }
    ],
    "category": "visual",
    "tags": ["background", "parallax", "scrolling", "atmosphere", "visual"],
    "icon": "image",
    "preview": "background-preview.gif",
    "documentation": {
      "usage": "Scrolling backgrounds create depth and atmosphere in your game. Adjust parallax factors for different layers to create convincing depth effects.",
      "examples": [
        {
          "title": "Forest Background",
          "description": "Multi-layer forest with parallax",
          "config": {
            "scrollSpeed": 0.3,
            "parallaxFactor": 0.2,
            "tileHorizontally": true
          }
        },
        {
          "title": "Space Background", 
          "description": "Starfield with slow movement",
          "config": {
            "scrollSpeed": 0.1,
            "parallaxFactor": 0.05,
            "tileHorizontally": true,
            "tileVertically": true
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "collectible-item",
    "type": "collectible",
    "name": "Collectible Item",
    "description": "Interactive collectible component for coins, power-ups, keys, and other items that players can gather. Features collection effects, scoring, and inventory management.",
    "version": "1.0.0", 
    "paramsSchema": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "default": 10,
          "minimum": 1,
          "maximum": 1000,
          "description": "Point value when collected"
        },
        "itemType": {
          "type": "string",
          "enum": ["coin", "gem", "powerup", "key", "health", "ammo", "custom"],
          "default": "coin",
          "description": "Type of collectible item"
        },
        "floatAnimation": {
          "type": "boolean",
          "default": true,
          "description": "Item floats up and down"
        },
        "rotateAnimation": {
          "type": "boolean",
          "default": true,
          "description": "Item rotates continuously"
        },
        "magnetRange": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 200,
          "description": "Range at which item is attracted to player (0=disabled)"
        },
        "respawn": {
          "type": "boolean",
          "default": false,
          "description": "Item respawns after being collected"
        },
        "respawnTime": {
          "type": "number",
          "default": 30,
          "minimum": 5,
          "maximum": 120,
          "description": "Time in seconds before respawn"
        }
      },
      "required": ["value", "itemType"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "item-sprite",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["collectible", "item", "pickup"],
        "defaultAsset": "gold-coin"
      },
      {
        "slotId": "collect-sound",
        "assetType": "sound",
        "required": true,
        "multiple": false,
        "tags": ["collect", "pickup", "coin", "positive"],
        "defaultAsset": "coin-collect-sound"
      },
      {
        "slotId": "collect-effect",
        "assetType": "sprite",
        "required": false,
        "multiple": false,
        "tags": ["effect", "particles", "collect"],
        "defaultAsset": "sparkle-effect"
      }
    ],
    "events": [
      {
        "name": "item_collected",
        "description": "Fired when the item is collected by a player",
        "parameters": {
          "collector": { "type": "string" },
          "value": { "type": "number" },
          "itemType": { "type": "string" },
          "position": { "type": "object" }
        }
      },
      {
        "name": "item_respawned",
        "description": "Fired when the item respawns",
        "parameters": {
          "position": { "type": "object" },
          "itemType": { "type": "string" }
        }
      }
    ],
    "category": "gameplay",
    "tags": ["collectible", "pickup", "score", "item", "interactive"],
    "icon": "circle",
    "preview": "collectible-preview.gif",
    "documentation": {
      "usage": "Collectible items reward players for exploration and provide game progression. Configure value, type, and visual effects to match your game's style.",
      "examples": [
        {
          "title": "Gold Coin",
          "description": "Standard scoring collectible",
          "config": {
            "value": 10,
            "itemType": "coin",
            "floatAnimation": true,
            "rotateAnimation": true
          }
        },
        {
          "title": "Health Potion",
          "description": "Collectible that restores health",
          "config": {
            "value": 1,
            "itemType": "health",
            "floatAnimation": false,
            "magnetRange": 50
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "basic-enemy",
    "type": "enemy",
    "name": "Basic Enemy",
    "description": "AI-controlled enemy component with patrol behavior, collision detection, and damage dealing capabilities. Configurable movement patterns and combat properties.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object", 
      "properties": {
        "health": {
          "type": "integer",
          "default": 1,
          "minimum": 1,
          "maximum": 10,
          "description": "Enemy health points"
        },
        "speed": {
          "type": "number",
          "default": 100,
          "minimum": 20,
          "maximum": 300,
          "description": "Movement speed in pixels per second"
        },
        "damage": {
          "type": "integer",
          "default": 1,
          "minimum": 1,
          "maximum": 5,
          "description": "Damage dealt to player on contact"
        },
        "patrolDistance": {
          "type": "number",
          "default": 100,
          "minimum": 50,
          "maximum": 500,
          "description": "Distance to patrol left and right from spawn point"
        },
        "detectionRange": {
          "type": "number",
          "default": 150,
          "minimum": 50,
          "maximum": 400,
          "description": "Range at which enemy detects player"
        },
        "chaseSpeed": {
          "type": "number",
          "default": 120,
          "minimum": 50,
          "maximum": 400,
          "description": "Speed when chasing player"
        },
        "aggressive": {
          "type": "boolean",
          "default": true,
          "description": "Whether enemy chases player when detected"
        }
      },
      "required": ["health", "speed", "damage"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "enemy-sprite",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["enemy", "character", "hostile"],
        "defaultAsset": "slime-enemy"
      },
      {
        "slotId": "death-sound",
        "assetType": "sound",
        "required": false,
        "multiple": false,
        "tags": ["death", "defeat", "enemy"],
        "defaultAsset": "enemy-defeat-sound"
      },
      {
        "slotId": "attack-sound",
        "assetType": "sound",
        "required": false,
        "multiple": false,
        "tags": ["attack", "damage", "enemy"],
        "defaultAsset": "enemy-attack-sound"
      }
    ],
    "events": [
      {
        "name": "enemy_defeated",
        "description": "Fired when the enemy is destroyed",
        "parameters": {
          "position": { "type": "object" },
          "defeatedBy": { "type": "string" },
          "scoreValue": { "type": "number" }
        }
      },
      {
        "name": "enemy_attack",
        "description": "Fired when enemy attacks player",
        "parameters": {
          "target": { "type": "string" },
          "damage": { "type": "number" },
          "position": { "type": "object" }
        }
      },
      {
        "name": "enemy_detected_player",
        "description": "Fired when enemy detects and starts chasing player",
        "parameters": {
          "playerPosition": { "type": "object" },
          "enemyPosition": { "type": "object" }
        }
      }
    ],
    "category": "gameplay",
    "tags": ["enemy", "ai", "hostile", "patrol", "combat"],
    "icon": "zap",
    "preview": "enemy-preview.gif",
    "documentation": {
      "usage": "Basic enemies provide challenge and opposition to the player. Configure health, damage, and movement patterns to create varied gameplay encounters.",
      "examples": [
        {
          "title": "Weak Patrol Enemy",
          "description": "Simple enemy that patrols a small area",
          "config": {
            "health": 1,
            "speed": 80,
            "damage": 1,
            "patrolDistance": 80,
            "aggressive": false
          }
        },
        {
          "title": "Aggressive Guardian",
          "description": "Strong enemy that chases intruders",
          "config": {
            "health": 3,
            "speed": 100,
            "damage": 2,
            "detectionRange": 200,
            "chaseSpeed": 150,
            "aggressive": true
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "sound-effect",
    "type": "sound",
    "name": "Sound Effect",
    "description": "Audio component for playing sound effects triggered by game events. Supports positional audio, volume control, and multiple sound variations.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object",
      "properties": {
        "volume": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1.0,
          "description": "Sound volume (0=silent, 1=max)"
        },
        "pitch": {
          "type": "number",
          "default": 1.0,
          "minimum": 0.5,
          "maximum": 2.0,
          "description": "Sound pitch multiplier"
        },
        "loop": {
          "type": "boolean",
          "default": false,
          "description": "Whether sound loops continuously"
        },
        "positional": {
          "type": "boolean",
          "default": false,
          "description": "Whether sound has 3D positioning"
        },
        "maxDistance": {
          "type": "number",
          "default": 300,
          "minimum": 50,
          "maximum": 1000,
          "description": "Maximum distance for positional audio"
        },
        "autoPlay": {
          "type": "boolean",
          "default": false,
          "description": "Play sound automatically when component is created"
        },
        "fadeIn": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 3.0,
          "description": "Fade in time in seconds"
        },
        "fadeOut": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 3.0,
          "description": "Fade out time in seconds"
        }
      },
      "required": ["volume"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "sound-file",
        "assetType": "sound",
        "required": true,
        "multiple": false,
        "tags": ["sound", "effect", "audio"],
        "defaultAsset": "generic-beep"
      },
      {
        "slotId": "variation-sounds",
        "assetType": "sound",
        "required": false,
        "multiple": true,
        "tags": ["variation", "randomize", "audio"],
        "defaultAsset": null
      }
    ],
    "events": [
      {
        "name": "sound_started",
        "description": "Fired when sound effect starts playing",
        "parameters": {
          "soundId": { "type": "string" },
          "volume": { "type": "number" },
          "position": { "type": "object" }
        }
      },
      {
        "name": "sound_finished",
        "description": "Fired when sound effect finishes playing",
        "parameters": {
          "soundId": { "type": "string" },
          "duration": { "type": "number" }
        }
      }
    ],
    "category": "audio",
    "tags": ["sound", "audio", "effect", "feedback", "atmosphere"],
    "icon": "volume-2",
    "preview": "sound-preview.png",
    "documentation": {
      "usage": "Sound effects provide audio feedback for player actions and game events. Configure volume, positioning, and playback options to enhance immersion.",
      "examples": [
        {
          "title": "Jump Sound",
          "description": "Quick sound effect for player jumping",
          "config": {
            "volume": 0.6,
            "pitch": 1.2,
            "loop": false,
            "positional": false
          }
        },
        {
          "title": "Ambient Loop",
          "description": "Looping environmental sound",
          "config": {
            "volume": 0.3,
            "loop": true,
            "positional": true,
            "maxDistance": 200,
            "fadeIn": 1.0
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "ui-display",
    "type": "ui",
    "name": "UI Display", 
    "description": "User interface component for displaying game information like health bars, score counters, timers, and other HUD elements with customizable styling.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object",
      "properties": {
        "displayType": {
          "type": "string",
          "enum": ["text", "bar", "counter", "timer", "image", "button"],
          "default": "text",
          "description": "Type of UI display"
        },
        "position": {
          "type": "string",
          "enum": ["top-left", "top-center", "top-right", "center-left", "center", "center-right", "bottom-left", "bottom-center", "bottom-right"],
          "default": "top-left",
          "description": "Screen position for the UI element"
        },
        "fontSize": {
          "type": "integer",
          "default": 24,
          "minimum": 8,
          "maximum": 72,
          "description": "Font size for text elements"
        },
        "color": {
          "type": "string",
          "default": "#FFFFFF",
          "description": "Text or primary color (hex format)"
        },
        "backgroundColor": {
          "type": "string",
          "default": "transparent",
          "description": "Background color (hex format or transparent)"
        },
        "maxValue": {
          "type": "number",
          "default": 100,
          "minimum": 1,
          "description": "Maximum value for bars and counters"
        },
        "showBackground": {
          "type": "boolean",
          "default": true,
          "description": "Show background panel behind UI element"
        },
        "fadeTime": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 5.0,
          "description": "Fade in/out time for animations"
        }
      },
      "required": ["displayType", "position"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "ui-font",
        "assetType": "font",
        "required": false,
        "multiple": false,
        "tags": ["font", "ui", "text"],
        "defaultAsset": "pixel-font"
      },
      {
        "slotId": "ui-background",
        "assetType": "sprite",
        "required": false,
        "multiple": false,
        "tags": ["ui", "panel", "background"],
        "defaultAsset": "ui-panel"
      },
      {
        "slotId": "bar-fill",
        "assetType": "sprite",
        "required": false,
        "multiple": false,
        "tags": ["ui", "bar", "health", "progress"],
        "defaultAsset": "health-bar-fill"
      }
    ],
    "events": [
      {
        "name": "ui_value_changed",
        "description": "Fired when the displayed value changes",
        "parameters": {
          "oldValue": { "type": "number" },
          "newValue": { "type": "number" },
          "elementId": { "type": "string" }
        }
      },
      {
        "name": "ui_clicked",
        "description": "Fired when a clickable UI element is clicked",
        "parameters": {
          "elementId": { "type": "string" },
          "clickPosition": { "type": "object" }
        }
      }
    ],
    "category": "ui",
    "tags": ["ui", "hud", "interface", "display", "information"],
    "icon": "layout",
    "preview": "ui-preview.png",
    "documentation": {
      "usage": "UI Display components show game information to players. Configure position, styling, and data binding to create informative and attractive interfaces.",
      "examples": [
        {
          "title": "Health Bar",
          "description": "Player health display bar",
          "config": {
            "displayType": "bar",
            "position": "top-left",
            "color": "#FF0000",
            "maxValue": 100,
            "showBackground": true
          }
        },
        {
          "title": "Score Counter",
          "description": "Points display in corner",
          "config": {
            "displayType": "counter",
            "position": "top-right",
            "fontSize": 32,
            "color": "#FFD700"
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "particle-effect",
    "type": "particle",
    "name": "Particle Effect",
    "description": "Visual effects component that generates particle systems for explosions, trails, sparkles, smoke, and other dynamic visual elements.",
    "version": "1.0.0",
    "paramsSchema": {
      "type": "object",
      "properties": {
        "effectType": {
          "type": "string",
          "enum": ["explosion", "trail", "sparkle", "smoke", "fire", "water", "magic", "custom"],
          "default": "sparkle",
          "description": "Type of particle effect"
        },
        "particleCount": {
          "type": "integer",
          "default": 20,
          "minimum": 1,
          "maximum": 200,
          "description": "Number of particles to generate"
        },
        "duration": {
          "type": "number",
          "default": 2.0,
          "minimum": 0.1,
          "maximum": 10.0,
          "description": "Effect duration in seconds"
        },
        "emissionRate": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 100,
          "description": "Particles emitted per second"
        },
        "spread": {
          "type": "number",
          "default": 90,
          "minimum": 10,
          "maximum": 360,
          "description": "Angle spread of particles in degrees"
        },
        "speed": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 500,
          "description": "Initial particle speed"
        },
        "gravity": {
          "type": "number",
          "default": 0,
          "minimum": -500,
          "maximum": 500,
          "description": "Gravity effect on particles"
        },
        "fadeOut": {
          "type": "boolean",
          "default": true,
          "description": "Particles fade out over their lifetime"
        },
        "autoDestroy": {
          "type": "boolean",
          "default": true,
          "description": "Effect destroys itself when finished"
        }
      },
      "required": ["effectType", "particleCount", "duration"]
    },
    "dependencies": [],
    "assetReferences": [
      {
        "slotId": "particle-sprite",
        "assetType": "sprite",
        "required": true,
        "multiple": false,
        "tags": ["particle", "effect", "visual"],
        "defaultAsset": "star-particle"
      },
      {
        "slotId": "effect-sound",
        "assetType": "sound",
        "required": false,
        "multiple": false,
        "tags": ["effect", "explosion", "impact"],
        "defaultAsset": "sparkle-sound"
      }
    ],
    "events": [
      {
        "name": "effect_started",
        "description": "Fired when particle effect begins",
        "parameters": {
          "position": { "type": "object" },
          "effectType": { "type": "string" },
          "particleCount": { "type": "number" }
        }
      },
      {
        "name": "effect_finished",
        "description": "Fired when particle effect completes",
        "parameters": {
          "position": { "type": "object" },
          "duration": { "type": "number" }
        }
      }
    ],
    "category": "visual",
    "tags": ["particle", "effect", "visual", "animation", "feedback"],
    "icon": "sparkles",
    "preview": "particle-preview.gif",
    "documentation": {
      "usage": "Particle effects add visual polish and feedback to game events. Configure particle properties to create explosions, trails, and atmospheric effects.",
      "examples": [
        {
          "title": "Explosion Effect",
          "description": "Burst of particles for explosions",
          "config": {
            "effectType": "explosion",
            "particleCount": 50,
            "duration": 1.5,
            "spread": 360,
            "speed": 150,
            "gravity": 100
          }
        },
        {
          "title": "Magic Sparkles",
          "description": "Gentle sparkly effect for magic",
          "config": {
            "effectType": "sparkle",
            "particleCount": 15,
            "duration": 3.0,
            "spread": 60,
            "speed": 50,
            "fadeOut": true
          }
        }
      ]
    },
    "buildTargets": ["desktop", "web"],
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
]