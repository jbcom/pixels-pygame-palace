[
  {
    "id": "platformer-movement",
    "name": "Platformer Movement",
    "description": "Complete movement mechanic for 2D platformer games including gravity, jumping, collision detection, and responsive controls with physics-based movement.",
    "version": "1.0.0",
    "category": "movement",
    "systems": [
      {
        "id": "input-handler",
        "name": "Input Handler System",
        "description": "Processes keyboard and gamepad input for movement commands",
        "priority": 10,
        "updateOrder": "pre_update",
        "requiredComponents": ["player-sprite"],
        "configuration": {
          "keyBindings": {
            "left": ["ArrowLeft", "KeyA"],
            "right": ["ArrowRight", "KeyD"],
            "jump": ["Space", "ArrowUp", "KeyW"],
            "run": ["ShiftLeft", "ShiftRight"]
          },
          "gamepadBindings": {
            "leftStick": "movement",
            "buttonA": "jump",
            "rightTrigger": "run"
          }
        }
      },
      {
        "id": "physics-movement",
        "name": "Physics Movement System",
        "description": "Applies movement forces, gravity, and velocity calculations",
        "priority": 20,
        "updateOrder": "update",
        "requiredComponents": ["player-sprite"],
        "configuration": {
          "gravity": 980,
          "maxFallSpeed": 500,
          "airControl": 0.8,
          "groundFriction": 0.85,
          "airFriction": 0.98
        }
      },
      {
        "id": "collision-detection",
        "name": "Collision Detection System",
        "description": "Handles collision with platforms, walls, and solid objects",
        "priority": 30,
        "updateOrder": "update",
        "requiredComponents": ["player-sprite", "platform-ground"],
        "configuration": {
          "tileSize": 32,
          "collisionLayers": ["solid", "platform", "one-way"],
          "coyoteTime": 0.1,
          "jumpBuffering": 0.15
        }
      },
      {
        "id": "animation-controller",
        "name": "Animation Controller System",
        "description": "Controls sprite animations based on movement state",
        "priority": 40,
        "updateOrder": "post_update",
        "requiredComponents": ["player-sprite"],
        "configuration": {
          "animationStates": {
            "idle": { "loop": true, "speed": 0.2 },
            "walk": { "loop": true, "speed": 0.15 },
            "run": { "loop": true, "speed": 0.1 },
            "jump": { "loop": false, "speed": 0.1 },
            "fall": { "loop": true, "speed": 0.3 }
          },
          "transitionThresholds": {
            "walkSpeed": 20,
            "runSpeed": 200,
            "jumpVelocity": -50
          }
        }
      }
    ],
    "configuration": {
      "globalSettings": {
        "gravity": 980,
        "terminalVelocity": 500,
        "defaultJumpHeight": 300,
        "defaultMoveSpeed": 200
      },
      "componentDefaults": {
        "player-sprite": {
          "speed": 200,
          "jumpHeight": 300,
          "acceleration": 800,
          "deceleration": 600
        }
      },
      "systemSettings": {
        "physics-movement": {
          "integrationType": "verlet",
          "deltaTimeLimit": 0.016667
        },
        "collision-detection": {
          "broadPhase": "spatial_hash",
          "narrowPhase": "separating_axis"
        }
      }
    },
    "requiredComponents": ["player-sprite", "platform-ground"],
    "compatibleComponents": ["collectible-item", "basic-enemy", "sound-effect", "particle-effect"],
    "conflictsWith": ["top-down-movement", "vehicle-movement"],
    "events": [
      {
        "name": "player_grounded",
        "description": "Fired when player lands on solid ground",
        "parameters": {
          "position": { "type": "object" },
          "landingVelocity": { "type": "number" },
          "platform": { "type": "string" }
        }
      },
      {
        "name": "player_airborne",
        "description": "Fired when player becomes airborne",
        "parameters": {
          "position": { "type": "object" },
          "jumpVelocity": { "type": "number" },
          "jumpType": { "type": "string" }
        }
      },
      {
        "name": "wall_collision",
        "description": "Fired when player collides with a wall",
        "parameters": {
          "position": { "type": "object" },
          "normal": { "type": "object" },
          "velocity": { "type": "object" }
        }
      },
      {
        "name": "movement_state_changed",
        "description": "Fired when player movement state changes",
        "parameters": {
          "oldState": { "type": "string" },
          "newState": { "type": "string" },
          "velocity": { "type": "object" }
        }
      }
    ],
    "tags": ["movement", "physics", "platformer", "2d", "gravity", "jumping"],
    "buildTargets": ["desktop", "web"],
    "documentation": {
      "usage": "The Platformer Movement mechanic provides complete 2D platformer physics including gravity, jumping, collision detection, and responsive controls. Configure gravity strength, jump height, and movement speeds to match your game's feel.",
      "examples": [
        {
          "title": "Classic Platformer",
          "description": "Traditional platformer with moderate gravity and responsive controls",
          "configuration": {
            "globalSettings": {
              "gravity": 980,
              "defaultJumpHeight": 300,
              "defaultMoveSpeed": 200
            },
            "componentDefaults": {
              "player-sprite": {
                "speed": 200,
                "jumpHeight": 300
              }
            }
          }
        },
        {
          "title": "Floaty Platformer",
          "description": "Lighter gravity for more aerial gameplay",
          "configuration": {
            "globalSettings": {
              "gravity": 600,
              "defaultJumpHeight": 400,
              "defaultMoveSpeed": 180
            },
            "componentDefaults": {
              "player-sprite": {
                "speed": 180,
                "jumpHeight": 400
              }
            }
          }
        }
      ]
    },
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  },
  {
    "id": "shooting-mechanic",
    "name": "Shooting Mechanic",
    "description": "Complete shooting system with projectile spawning, trajectory calculation, collision detection, and damage dealing for action and shooter games.",
    "version": "1.0.0",
    "category": "combat",
    "systems": [
      {
        "id": "weapon-controller",
        "name": "Weapon Controller System",
        "description": "Handles weapon input, firing rates, and ammunition management",
        "priority": 15,
        "updateOrder": "pre_update",
        "requiredComponents": ["player-sprite"],
        "configuration": {
          "fireButton": "mouse0",
          "aimMode": "mouse",
          "autoFire": false,
          "fireRate": 300,
          "reloadTime": 2.0,
          "maxAmmo": 30,
          "infiniteAmmo": true
        }
      },
      {
        "id": "projectile-spawner",
        "name": "Projectile Spawner System",
        "description": "Creates and initializes projectile entities with proper velocity and direction",
        "priority": 25,
        "updateOrder": "update",
        "requiredComponents": ["player-sprite"],
        "configuration": {
          "projectileSpeed": 400,
          "spread": 0,
          "projectileLifetime": 5.0,
          "spawnOffset": { "x": 0, "y": 0 },
          "inheritVelocity": 0.3
        }
      },
      {
        "id": "projectile-physics",
        "name": "Projectile Physics System",
        "description": "Updates projectile movement, applies gravity and air resistance",
        "priority": 35,
        "updateOrder": "update",
        "requiredComponents": [],
        "configuration": {
          "applyGravity": false,
          "gravityScale": 0.5,
          "airResistance": 0.99,
          "bounce": false,
          "bounceVelocityLoss": 0.7
        }
      },
      {
        "id": "projectile-collision",
        "name": "Projectile Collision System",
        "description": "Handles projectile collisions with enemies, environment, and other objects",
        "priority": 45,
        "updateOrder": "update",
        "requiredComponents": ["basic-enemy", "platform-ground"],
        "configuration": {
          "damageAmount": 1,
          "piercing": false,
          "maxPierceCount": 1,
          "explosionRadius": 0,
          "knockbackForce": 100
        }
      },
      {
        "id": "targeting-system",
        "name": "Targeting System",
        "description": "Provides aiming assistance and target tracking capabilities",
        "priority": 50,
        "updateOrder": "post_update",
        "requiredComponents": ["basic-enemy"],
        "configuration": {
          "autoAim": false,
          "aimAssistRadius": 50,
          "aimAssistStrength": 0.3,
          "leadTargets": false,
          "showCrosshair": true
        }
      }
    ],
    "configuration": {
      "globalSettings": {
        "maxProjectiles": 50,
        "projectilePoolSize": 100,
        "defaultProjectileSpeed": 400,
        "defaultDamage": 1
      },
      "componentDefaults": {
        "projectile": {
          "speed": 400,
          "lifetime": 5.0,
          "damage": 1,
          "size": { "width": 8, "height": 8 }
        }
      },
      "systemSettings": {
        "projectile-spawner": {
          "poolingEnabled": true,
          "prewarming": 20
        },
        "projectile-collision": {
          "collisionLayers": ["enemy", "environment", "destructible"],
          "ignorePlayerCollision": true
        }
      }
    },
    "requiredComponents": ["player-sprite"],
    "compatibleComponents": ["basic-enemy", "sound-effect", "particle-effect", "collectible-item"],
    "conflictsWith": ["melee-combat", "pacifist-mode"],
    "events": [
      {
        "name": "weapon_fired",
        "description": "Fired when a projectile is shot",
        "parameters": {
          "shooter": { "type": "string" },
          "position": { "type": "object" },
          "direction": { "type": "object" },
          "projectileId": { "type": "string" }
        }
      },
      {
        "name": "projectile_hit",
        "description": "Fired when a projectile hits a target",
        "parameters": {
          "projectile": { "type": "string" },
          "target": { "type": "string" },
          "damage": { "type": "number" },
          "hitPosition": { "type": "object" }
        }
      },
      {
        "name": "enemy_killed",
        "description": "Fired when an enemy is defeated by projectile",
        "parameters": {
          "enemy": { "type": "string" },
          "killer": { "type": "string" },
          "position": { "type": "object" },
          "scoreValue": { "type": "number" }
        }
      },
      {
        "name": "weapon_reload",
        "description": "Fired when weapon reloading starts",
        "parameters": {
          "weapon": { "type": "string" },
          "reloadTime": { "type": "number" },
          "ammoRemaining": { "type": "number" }
        }
      },
      {
        "name": "ammo_depleted",
        "description": "Fired when ammunition runs out",
        "parameters": {
          "weapon": { "type": "string" },
          "position": { "type": "object" }
        }
      }
    ],
    "tags": ["shooting", "combat", "projectile", "weapon", "action"],
    "buildTargets": ["desktop", "web"],
    "documentation": {
      "usage": "The Shooting Mechanic enables projectile-based combat with configurable weapons, ammunition, and targeting. Perfect for action games, shooters, and combat-focused platformers.",
      "examples": [
        {
          "title": "Rapid Fire Blaster",
          "description": "High rate of fire weapon for action gameplay",
          "configuration": {
            "globalSettings": {
              "defaultProjectileSpeed": 500,
              "maxProjectiles": 30
            },
            "componentDefaults": {
              "projectile": {
                "speed": 500,
                "lifetime": 3.0,
                "damage": 1
              }
            },
            "systemSettings": {
              "weapon-controller": {
                "fireRate": 150,
                "autoFire": true,
                "infiniteAmmo": true
              }
            }
          }
        },
        {
          "title": "Precise Rifle",
          "description": "Slow, accurate, high-damage weapon",
          "configuration": {
            "globalSettings": {
              "defaultProjectileSpeed": 600,
              "maxProjectiles": 10
            },
            "componentDefaults": {
              "projectile": {
                "speed": 600,
                "lifetime": 8.0,
                "damage": 3
              }
            },
            "systemSettings": {
              "weapon-controller": {
                "fireRate": 600,
                "autoFire": false,
                "maxAmmo": 10
              },
              "targeting-system": {
                "autoAim": true,
                "aimAssistRadius": 30
              }
            }
          }
        }
      ]
    },
    "createdAt": "2024-01-01T00:00:00.000Z",
    "updatedAt": "2024-01-01T00:00:00.000Z"
  }
]